# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: CI
  jobs:
  - job: CI    
    steps:
    - task: AzureResourceManagerTemplateDeployment@3
      displayName: 'ARM Template Validation'
      inputs:
        azureResourceManagerConnection: 'AzureDevOpsCommunity dabu-PartsUnlimited'
        subscriptionId: '33b1bf3d-53dc-432d-ac1c-ae964ceb1c9b'
        resourceGroupName: '$(ResourceGroupName)'
        location: 'West US 2'
        csmFile: 'PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.json'
        csmParametersFile: 'PartsUnlimited-aspnet45/env/PartsUnlimitedEnv/Templates/FullEnvironmentSetupMerged.param.json'
        overrideParameters: '-WebsiteName $(WebsiteName) -PUL_ServerName $(ServerName)  -PUL_HostingPlanName $(HostingPlan) -CICDEngineName "$(CICDEngine)"'
        deploymentMode: Validation
    
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      displayName: 'Test Assemblies'
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\*test*.dll
          !**\*TestAdapter.dll
          !**\obj\**
        searchFolder: '$(System.DefaultWorkingDirectory)'
        testFiltercriteria: 'TestCategory=Unit Tests'
        runOnlyImpactedTests: false
        runInParallel: false
        codeCoverageEnabled: true
        testRunTitle: '01 Unit Tests'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        diagnosticsEnabled: true
      continueOnError: true

    - task: CopyFiles@2
      displayName: 'Copy ARM Templates to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**/*.json'
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    - task: CopyFiles@2
      displayName: 'Copy Automated Tests to: $(build.artifactstagingdirectory)'
      inputs:
        SourceFolder: '$(build.sourcesdirectory)'
        Contents: '**\bin\$(buildConfiguration)\**'
        TargetFolder: '$(build.artifactstagingdirectory)'
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

    - publish: $(build.artifactstagingdirectory)
      artifact: $(ArtifactName)

- stage: Dev
  displayName: Dev
  dependsOn: CI
  variables:
    slot: Dev

  jobs:
  - deployment: DeployWeb
    displayName: Deploy and test
    # creates an environment if it doesn't exist
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          
          - download: current
            artifact: $(ArtifactName)

          - task: AzureKeyVault@1
            displayName: 'Azure Key Vault: PartsUnlimited'
            inputs:
              azureSubscription: 'AzureDevOpsCommunity dabu-PartsUnlimited'
              KeyVaultName: 'dabu-PartsUnlimitedKeys'
              SecretsFilter: 'AppInsights-AppID-Dev, AppInsights-ApiKey-Dev'

          - task: ms-appinsights.ReleaseAnnotation@1
            displayName: Add release annotation to Azure Application Insights
            inputs:
              applicationId: '$(AppInsights-AppID-Dev)'
              apiKey: '$(AppInsights-ApiKey-Dev)'

          - task: AzureRmWebAppDeployment@4
            displayName: Deploy Web App
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureDevOpsCommunity dabu-PartsUnlimited'
              appType: 'webApp'
              WebAppName: 'dabu-PartsUnlimited'
              deployToSlotOrASE: true
              ResourceGroupName: '$(ResourceGroupName)'
              SlotName: '$(slot)'
              packageForLinux: '$(Pipeline.Workspace)/$(ArtifactName)/PartsUnlimitedWebsite.zip'

          - task: VSTest@2
            displayName: 'Selenium UI Tests'
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*test*.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(Pipeline.Workspace)/$(ArtifactName)/PartsUnlimited-aspnet45/test'
              testFiltercriteria: 'TestCategory=L1UITests'
              uiTests: true
              testRunTitle: '02 Level 1 UI Tests'
              diagnosticsEnabled: true
            continueOnError: true

- stage: QA
  displayName: QA
  dependsOn: Dev
  variables:
    slot: QA

  jobs:
  - deployment: DeployWeb
    displayName: Deploy and test
    # creates an environment if it doesn't exist
    environment: 'QA'
    strategy:
      runOnce:
        deploy:
          steps:
          
          - download: current
            artifact: $(ArtifactName)

          - task: AzureRmWebAppDeployment@4
            displayName: Deploy Web App
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureDevOpsCommunity dabu-PartsUnlimited'
              appType: 'webApp'
              WebAppName: 'dabu-PartsUnlimited'
              deployToSlotOrASE: true
              ResourceGroupName: '$(ResourceGroupName)'
              SlotName: $(slot)
              packageForLinux: '$(Pipeline.Workspace)/$(ArtifactName)/PartsUnlimitedWebsite.zip'

          - task: VSTest@2
            displayName: 'Selenium UI Tests'
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*test*.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(Pipeline.Workspace)/$(ArtifactName)/PartsUnlimited-aspnet45/test'
              testFiltercriteria: 'TestCategory=L1UITests|TestCategory=L2UITests'
              uiTests: true
              testRunTitle: '03 Level 2 UI Tests'
              diagnosticsEnabled: true
            continueOnError: true

- stage: Production
  displayName: Production
  dependsOn: QA
  variables:
    slot: Production

  jobs:
  - deployment: DeployWeb
    displayName: Deploy
    # creates an environment if it doesn't exist
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          
          - download: current
            artifact: $(ArtifactName)

          - task: AzureRmWebAppDeployment@4
            displayName: Deploy Web App
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureDevOpsCommunity dabu-PartsUnlimited'
              appType: 'webApp'
              WebAppName: 'dabu-PartsUnlimited'
              deployToSlotOrASE: false
              ResourceGroupName: '$(ResourceGroupName)'
              packageForLinux: '$(Pipeline.Workspace)/$(ArtifactName)/PartsUnlimitedWebsite.zip'

